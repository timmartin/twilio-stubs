from typing import Dict, Optional
from _typeshed import Incomplete

class JwtDecodeError(Exception): ...

class Jwt:
    GENERATE: Incomplete
    ALGORITHM: str
    secret_key: str = ...
    issuer: str = ...
    subject: Optional[str] = ...
    algorithm: str = ...
    nbf: int = ...
    ttl: int = ...
    valid_until: int = ...
    def __init__(self, secret_key, issuer, subject: Incomplete | None = ..., algorithm: Incomplete | None = ..., nbf=..., ttl: int = ..., valid_until: Incomplete | None = ...) -> None: ...
    @property
    def payload(self) -> Dict: ...
    @property
    def headers(self) -> Dict: ...
    def to_jwt(self, ttl: Incomplete | None = ...): ...
    @classmethod
    def from_jwt(cls, jwt, key: str = ...): ...
