from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class ConferenceParticipantList(ListResource):
    def __init__(self, version, conference_sid) -> None: ...
    def stream(self, participant_sid=..., label=..., events=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, participant_sid=..., label=..., events=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, participant_sid=..., label=..., events=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, participant_sid): ...
    def __call__(self, participant_sid): ...

class ConferenceParticipantPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ConferenceParticipantContext(InstanceContext):
    def __init__(self, version, conference_sid, participant_sid) -> None: ...
    def fetch(self, events=..., metrics=...): ...

class ConferenceParticipantInstance(InstanceResource):
    class CallDirection:
        INBOUND: str
        OUTBOUND: str
    class CallStatus:
        ANSWERED: str
        COMPLETED: str
        BUSY: str
        FAIL: str
        NOANSWER: str
        RINGING: str
        CANCELED: str
    class JitterBufferSize:
        LARGE: str
        SMALL: str
        MEDIUM: str
        OFF: str
    class Region:
        US1: str
        US2: str
        AU1: str
        BR1: str
        IE1: str
        JP1: str
        SG1: str
        DE1: str
    class CallType:
        CARRIER: str
        CLIENT: str
        SIP: str
    class ProcessingState:
        COMPLETE: str
        IN_PROGRESS: str
        TIMEOUT: str
    def __init__(self, version, payload, conference_sid, participant_sid: Incomplete | None = ...) -> None: ...
    @property
    def participant_sid(self): ...
    @property
    def label(self): ...
    @property
    def conference_sid(self): ...
    @property
    def call_sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def call_direction(self): ...
    @property
    def from_(self): ...
    @property
    def to(self): ...
    @property
    def call_status(self): ...
    @property
    def country_code(self): ...
    @property
    def is_moderator(self): ...
    @property
    def join_time(self): ...
    @property
    def leave_time(self): ...
    @property
    def duration_seconds(self): ...
    @property
    def outbound_queue_length(self): ...
    @property
    def outbound_time_in_queue(self): ...
    @property
    def jitter_buffer_size(self): ...
    @property
    def is_coach(self): ...
    @property
    def coached_participants(self): ...
    @property
    def participant_region(self): ...
    @property
    def conference_region(self): ...
    @property
    def call_type(self): ...
    @property
    def processing_state(self): ...
    @property
    def properties(self): ...
    @property
    def events(self): ...
    @property
    def metrics(self): ...
    @property
    def url(self): ...
    def fetch(self, events=..., metrics=...): ...
