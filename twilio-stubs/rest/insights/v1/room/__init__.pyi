from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.insights.v1.room.participant import ParticipantList as ParticipantList

class RoomList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, room_type=..., codec=..., room_name=..., created_after=..., created_before=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, room_type=..., codec=..., room_name=..., created_after=..., created_before=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, room_type=..., codec=..., room_name=..., created_after=..., created_before=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, room_sid): ...
    def __call__(self, room_sid): ...

class RoomPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class RoomContext(InstanceContext):
    def __init__(self, version, room_sid) -> None: ...
    def fetch(self): ...
    @property
    def participants(self): ...

class RoomInstance(InstanceResource):
    class RoomType:
        GO: str
        PEER_TO_PEER: str
        GROUP: str
        GROUP_SMALL: str
    class RoomStatus:
        IN_PROGRESS: str
        COMPLETED: str
    class CreatedMethod:
        SDK: str
        AD_HOC: str
        API: str
    class EndReason:
        ROOM_ENDED_VIA_API: str
        TIMEOUT: str
    class Codec:
        VP8: str
        H264: str
        VP9: str
    class TwilioRealm:
        US1: str
        US2: str
        AU1: str
        BR1: str
        IE1: str
        JP1: str
        SG1: str
        IN1: str
        DE1: str
        GLL: str
    class ProcessingState:
        COMPLETE: str
        IN_PROGRESS: str
    class EdgeLocation:
        ASHBURN: str
        DUBLIN: str
        FRANKFURT: str
        SINGAPORE: str
        SYDNEY: str
        SAO_PAULO: str
        ROAMING: str
        UMATILLA: str
        TOKYO: str
    def __init__(self, version, payload, room_sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def room_sid(self): ...
    @property
    def room_name(self): ...
    @property
    def create_time(self): ...
    @property
    def end_time(self): ...
    @property
    def room_type(self): ...
    @property
    def room_status(self): ...
    @property
    def status_callback(self): ...
    @property
    def status_callback_method(self): ...
    @property
    def created_method(self): ...
    @property
    def end_reason(self): ...
    @property
    def max_participants(self): ...
    @property
    def unique_participants(self): ...
    @property
    def unique_participant_identities(self): ...
    @property
    def concurrent_participants(self): ...
    @property
    def max_concurrent_participants(self): ...
    @property
    def codecs(self): ...
    @property
    def media_region(self): ...
    @property
    def duration_sec(self): ...
    @property
    def total_participant_duration_sec(self): ...
    @property
    def total_recording_duration_sec(self): ...
    @property
    def processing_state(self): ...
    @property
    def recording_enabled(self): ...
    @property
    def edge_location(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    @property
    def participants(self): ...
