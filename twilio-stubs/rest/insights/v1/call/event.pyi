from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class EventList(ListResource):
    def __init__(self, version, call_sid) -> None: ...
    def stream(self, edge=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, edge=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, edge=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...

class EventPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class EventInstance(InstanceResource):
    class TwilioEdge:
        UNKNOWN_EDGE: str
        CARRIER_EDGE: str
        SIP_EDGE: str
        SDK_EDGE: str
        CLIENT_EDGE: str
    class Level:
        UNKNOWN: str
        DEBUG: str
        INFO: str
        WARNING: str
        ERROR: str
    def __init__(self, version, payload, call_sid) -> None: ...
    @property
    def timestamp(self): ...
    @property
    def call_sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def edge(self): ...
    @property
    def group(self): ...
    @property
    def level(self): ...
    @property
    def name(self): ...
    @property
    def carrier_edge(self): ...
    @property
    def sip_edge(self): ...
    @property
    def sdk_edge(self): ...
    @property
    def client_edge(self): ...
