from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class UserList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class UserPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class UserContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self, friendly_name=..., avatar=..., state=..., is_available=...): ...

class UserInstance(InstanceResource):
    class StateType:
        ACTIVE: str
        DEACTIVATED: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def identity(self): ...
    @property
    def friendly_name(self): ...
    @property
    def avatar(self): ...
    @property
    def state(self): ...
    @property
    def is_available(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def update(self, friendly_name=..., avatar=..., state=..., is_available=...): ...
