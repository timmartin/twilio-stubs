from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class LegacyContentList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...

class LegacyContentPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class LegacyContentInstance(InstanceResource):
    def __init__(self, version, payload) -> None: ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def language(self): ...
    @property
    def variables(self): ...
    @property
    def types(self): ...
    @property
    def legacy_template_name(self): ...
    @property
    def legacy_body(self): ...
    @property
    def url(self): ...
