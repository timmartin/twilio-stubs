from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class AccessTokenList(ListResource):
    def __init__(self, version, service_sid) -> None: ...
    def create(self, identity, factor_type, factor_friendly_name=..., ttl=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class AccessTokenPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class AccessTokenContext(InstanceContext):
    def __init__(self, version, service_sid, sid) -> None: ...
    def fetch(self): ...

class AccessTokenInstance(InstanceResource):
    class FactorTypes:
        PUSH: str
    def __init__(self, version, payload, service_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def service_sid(self): ...
    @property
    def entity_identity(self): ...
    @property
    def factor_type(self): ...
    @property
    def factor_friendly_name(self): ...
    @property
    def token(self): ...
    @property
    def url(self): ...
    @property
    def ttl(self): ...
    @property
    def date_created(self): ...
    def fetch(self): ...
