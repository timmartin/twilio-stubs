from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class TemplateList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, friendly_name=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, friendly_name=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, friendly_name=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...

class TemplatePage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class TemplateInstance(InstanceResource):
    def __init__(self, version, payload) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def channels(self): ...
    @property
    def translations(self): ...
