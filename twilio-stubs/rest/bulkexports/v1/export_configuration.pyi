from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class ExportConfigurationList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, resource_type): ...
    def __call__(self, resource_type): ...

class ExportConfigurationPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ExportConfigurationContext(InstanceContext):
    def __init__(self, version, resource_type) -> None: ...
    def fetch(self): ...
    def update(self, enabled=..., webhook_url=..., webhook_method=...): ...

class ExportConfigurationInstance(InstanceResource):
    def __init__(self, version, payload, resource_type: Incomplete | None = ...) -> None: ...
    @property
    def enabled(self): ...
    @property
    def webhook_url(self): ...
    @property
    def webhook_method(self): ...
    @property
    def resource_type(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def update(self, enabled=..., webhook_url=..., webhook_method=...): ...
