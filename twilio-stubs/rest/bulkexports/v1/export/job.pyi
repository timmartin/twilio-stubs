from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class JobList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, job_sid): ...
    def __call__(self, job_sid): ...

class JobPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class JobContext(InstanceContext):
    def __init__(self, version, job_sid) -> None: ...
    def fetch(self): ...
    def delete(self): ...

class JobInstance(InstanceResource):
    class Status:
        ERRORDURINGRUN: str
        SUBMITTED: str
        RUNNING: str
        COMPLETEDEMPTYRECORDS: str
        COMPLETED: str
        FAILED: str
        RUNNINGTOBEDELETED: str
        DELETEDBYUSERREQUEST: str
    def __init__(self, version, payload, job_sid: Incomplete | None = ...) -> None: ...
    @property
    def resource_type(self): ...
    @property
    def friendly_name(self): ...
    @property
    def details(self): ...
    @property
    def start_day(self): ...
    @property
    def end_day(self): ...
    @property
    def job_sid(self): ...
    @property
    def webhook_url(self): ...
    @property
    def webhook_method(self): ...
    @property
    def email(self): ...
    @property
    def url(self): ...
    @property
    def job_queue_position(self): ...
    @property
    def estimated_completion_time(self): ...
    def fetch(self): ...
    def delete(self): ...
