from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.voice.v1.dialing_permissions.country.highrisk_special_prefix import HighriskSpecialPrefixList as HighriskSpecialPrefixList

class CountryList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, iso_code=..., continent=..., country_code=..., low_risk_numbers_enabled=..., high_risk_special_numbers_enabled=..., high_risk_tollfraud_numbers_enabled=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, iso_code=..., continent=..., country_code=..., low_risk_numbers_enabled=..., high_risk_special_numbers_enabled=..., high_risk_tollfraud_numbers_enabled=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, iso_code=..., continent=..., country_code=..., low_risk_numbers_enabled=..., high_risk_special_numbers_enabled=..., high_risk_tollfraud_numbers_enabled=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, iso_code): ...
    def __call__(self, iso_code): ...

class CountryPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class CountryContext(InstanceContext):
    def __init__(self, version, iso_code) -> None: ...
    def fetch(self): ...
    @property
    def highrisk_special_prefixes(self): ...

class CountryInstance(InstanceResource):
    def __init__(self, version, payload, iso_code: Incomplete | None = ...) -> None: ...
    @property
    def iso_code(self): ...
    @property
    def name(self): ...
    @property
    def continent(self): ...
    @property
    def country_codes(self): ...
    @property
    def low_risk_numbers_enabled(self): ...
    @property
    def high_risk_special_numbers_enabled(self): ...
    @property
    def high_risk_tollfraud_numbers_enabled(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    @property
    def highrisk_special_prefixes(self): ...
