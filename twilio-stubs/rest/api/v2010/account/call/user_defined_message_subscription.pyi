from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class UserDefinedMessageSubscriptionList(ListResource):
    def __init__(self, version, account_sid, call_sid) -> None: ...
    def create(self, callback, idempotency_key=..., method=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class UserDefinedMessageSubscriptionPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class UserDefinedMessageSubscriptionContext(InstanceContext):
    def __init__(self, version, account_sid, call_sid, sid) -> None: ...
    def delete(self): ...

class UserDefinedMessageSubscriptionInstance(InstanceResource):
    def __init__(self, version, payload, account_sid, call_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def call_sid(self): ...
    @property
    def sid(self): ...
    @property
    def date_created(self): ...
    @property
    def uri(self): ...
    def delete(self): ...
