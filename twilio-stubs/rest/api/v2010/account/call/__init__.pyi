from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.api.v2010.account.call.event import EventList as EventList
from twilio.rest.api.v2010.account.call.feedback import FeedbackList as FeedbackList
from twilio.rest.api.v2010.account.call.feedback_summary import FeedbackSummaryList as FeedbackSummaryList
from twilio.rest.api.v2010.account.call.notification import NotificationList as NotificationList
from twilio.rest.api.v2010.account.call.payment import PaymentList as PaymentList
from twilio.rest.api.v2010.account.call.recording import RecordingList as RecordingList
from twilio.rest.api.v2010.account.call.siprec import SiprecList as SiprecList
from twilio.rest.api.v2010.account.call.stream import StreamList as StreamList
from twilio.rest.api.v2010.account.call.user_defined_message import UserDefinedMessageList as UserDefinedMessageList
from twilio.rest.api.v2010.account.call.user_defined_message_subscription import UserDefinedMessageSubscriptionList as UserDefinedMessageSubscriptionList

class CallList(ListResource):
    def __init__(self, version, account_sid) -> None: ...
    def create(self, to, from_, method=..., fallback_url=..., fallback_method=..., status_callback=..., status_callback_event=..., status_callback_method=..., send_digits=..., timeout=..., record=..., recording_channels=..., recording_status_callback=..., recording_status_callback_method=..., sip_auth_username=..., sip_auth_password=..., machine_detection=..., machine_detection_timeout=..., recording_status_callback_event=..., trim=..., caller_id=..., machine_detection_speech_threshold=..., machine_detection_speech_end_threshold=..., machine_detection_silence_timeout=..., async_amd=..., async_amd_status_callback=..., async_amd_status_callback_method=..., byoc=..., call_reason=..., call_token=..., recording_track=..., time_limit=..., url=..., twiml=..., application_sid=...): ...
    def stream(self, to=..., from_=..., parent_call_sid=..., status=..., start_time_before=..., start_time=..., start_time_after=..., end_time_before=..., end_time=..., end_time_after=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, to=..., from_=..., parent_call_sid=..., status=..., start_time_before=..., start_time=..., start_time_after=..., end_time_before=..., end_time=..., end_time_after=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, to=..., from_=..., parent_call_sid=..., status=..., start_time_before=..., start_time=..., start_time_after=..., end_time_before=..., end_time=..., end_time_after=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    @property
    def feedback_summaries(self): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class CallPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class CallContext(InstanceContext):
    def __init__(self, version, account_sid, sid) -> None: ...
    def delete(self): ...
    def fetch(self): ...
    def update(self, url=..., method=..., status=..., fallback_url=..., fallback_method=..., status_callback=..., status_callback_method=..., twiml=..., time_limit=...): ...
    @property
    def recordings(self): ...
    @property
    def notifications(self): ...
    @property
    def feedback(self): ...
    @property
    def events(self): ...
    @property
    def payments(self): ...
    @property
    def siprec(self): ...
    @property
    def streams(self): ...
    @property
    def user_defined_message_subscriptions(self): ...
    @property
    def user_defined_messages(self): ...

class CallInstance(InstanceResource):
    class Event:
        INITIATED: str
        RINGING: str
        ANSWERED: str
        COMPLETED: str
    class Status:
        QUEUED: str
        RINGING: str
        IN_PROGRESS: str
        COMPLETED: str
        BUSY: str
        FAILED: str
        NO_ANSWER: str
        CANCELED: str
    class UpdateStatus:
        CANCELED: str
        COMPLETED: str
    def __init__(self, version, payload, account_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def parent_call_sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def to(self): ...
    @property
    def to_formatted(self): ...
    @property
    def from_(self): ...
    @property
    def from_formatted(self): ...
    @property
    def phone_number_sid(self): ...
    @property
    def status(self): ...
    @property
    def start_time(self): ...
    @property
    def end_time(self): ...
    @property
    def duration(self): ...
    @property
    def price(self): ...
    @property
    def price_unit(self): ...
    @property
    def direction(self): ...
    @property
    def answered_by(self): ...
    @property
    def api_version(self): ...
    @property
    def forwarded_from(self): ...
    @property
    def group_sid(self): ...
    @property
    def caller_name(self): ...
    @property
    def queue_time(self): ...
    @property
    def trunk_sid(self): ...
    @property
    def uri(self): ...
    @property
    def subresource_uris(self): ...
    def delete(self): ...
    def fetch(self): ...
    def update(self, url=..., method=..., status=..., fallback_url=..., fallback_method=..., status_callback=..., status_callback_method=..., twiml=..., time_limit=...): ...
    @property
    def recordings(self): ...
    @property
    def notifications(self): ...
    @property
    def feedback(self): ...
    @property
    def events(self): ...
    @property
    def payments(self): ...
    @property
    def siprec(self): ...
    @property
    def streams(self): ...
    @property
    def user_defined_message_subscriptions(self): ...
    @property
    def user_defined_messages(self): ...
