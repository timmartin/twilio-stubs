from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class MemberList(ListResource):
    def __init__(self, version, account_sid, queue_sid) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, call_sid): ...
    def __call__(self, call_sid): ...

class MemberPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class MemberContext(InstanceContext):
    def __init__(self, version, account_sid, queue_sid, call_sid) -> None: ...
    def fetch(self): ...
    def update(self, url, method=...): ...

class MemberInstance(InstanceResource):
    def __init__(self, version, payload, account_sid, queue_sid, call_sid: Incomplete | None = ...) -> None: ...
    @property
    def call_sid(self): ...
    @property
    def date_enqueued(self): ...
    @property
    def position(self): ...
    @property
    def uri(self): ...
    @property
    def wait_time(self): ...
    @property
    def queue_sid(self): ...
    def fetch(self): ...
    def update(self, url, method=...): ...
