from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.api.v2010.account.address.dependent_phone_number import DependentPhoneNumberList as DependentPhoneNumberList

class AddressList(ListResource):
    def __init__(self, version, account_sid) -> None: ...
    def create(self, customer_name, street, city, region, postal_code, iso_country, friendly_name=..., emergency_enabled=..., auto_correct_address=..., street_secondary=...): ...
    def stream(self, customer_name=..., friendly_name=..., iso_country=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, customer_name=..., friendly_name=..., iso_country=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, customer_name=..., friendly_name=..., iso_country=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class AddressPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class AddressContext(InstanceContext):
    def __init__(self, version, account_sid, sid) -> None: ...
    def delete(self): ...
    def fetch(self): ...
    def update(self, friendly_name=..., customer_name=..., street=..., city=..., region=..., postal_code=..., emergency_enabled=..., auto_correct_address=..., street_secondary=...): ...
    @property
    def dependent_phone_numbers(self): ...

class AddressInstance(InstanceResource):
    def __init__(self, version, payload, account_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def city(self): ...
    @property
    def customer_name(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def friendly_name(self): ...
    @property
    def iso_country(self): ...
    @property
    def postal_code(self): ...
    @property
    def region(self): ...
    @property
    def sid(self): ...
    @property
    def street(self): ...
    @property
    def uri(self): ...
    @property
    def emergency_enabled(self): ...
    @property
    def validated(self): ...
    @property
    def verified(self): ...
    @property
    def street_secondary(self): ...
    def delete(self): ...
    def fetch(self): ...
    def update(self, friendly_name=..., customer_name=..., street=..., city=..., region=..., postal_code=..., emergency_enabled=..., auto_correct_address=..., street_secondary=...): ...
    @property
    def dependent_phone_numbers(self): ...
