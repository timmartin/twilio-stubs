from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.api.v2010.account.incoming_phone_number.assigned_add_on import AssignedAddOnList as AssignedAddOnList
from twilio.rest.api.v2010.account.incoming_phone_number.local import LocalList as LocalList
from twilio.rest.api.v2010.account.incoming_phone_number.mobile import MobileList as MobileList
from twilio.rest.api.v2010.account.incoming_phone_number.toll_free import TollFreeList as TollFreeList

class IncomingPhoneNumberList(ListResource):
    def __init__(self, version, account_sid) -> None: ...
    def stream(self, beta=..., friendly_name=..., phone_number=..., origin=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, beta=..., friendly_name=..., phone_number=..., origin=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, beta=..., friendly_name=..., phone_number=..., origin=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, api_version=..., friendly_name=..., sms_application_sid=..., sms_fallback_method=..., sms_fallback_url=..., sms_method=..., sms_url=..., status_callback=..., status_callback_method=..., voice_application_sid=..., voice_caller_id_lookup=..., voice_fallback_method=..., voice_fallback_url=..., voice_method=..., voice_url=..., emergency_status=..., emergency_address_sid=..., trunk_sid=..., identity_sid=..., address_sid=..., voice_receive_mode=..., bundle_sid=..., phone_number=..., area_code=...): ...
    @property
    def local(self): ...
    @property
    def mobile(self): ...
    @property
    def toll_free(self): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class IncomingPhoneNumberPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class IncomingPhoneNumberContext(InstanceContext):
    def __init__(self, version, account_sid, sid) -> None: ...
    def update(self, account_sid=..., api_version=..., friendly_name=..., sms_application_sid=..., sms_fallback_method=..., sms_fallback_url=..., sms_method=..., sms_url=..., status_callback=..., status_callback_method=..., voice_application_sid=..., voice_caller_id_lookup=..., voice_fallback_method=..., voice_fallback_url=..., voice_method=..., voice_url=..., emergency_status=..., emergency_address_sid=..., trunk_sid=..., voice_receive_mode=..., identity_sid=..., address_sid=..., bundle_sid=...): ...
    def fetch(self): ...
    def delete(self): ...
    @property
    def assigned_add_ons(self): ...

class IncomingPhoneNumberInstance(InstanceResource):
    class AddressRequirement:
        NONE: str
        ANY: str
        LOCAL: str
        FOREIGN: str
    class EmergencyStatus:
        ACTIVE: str
        INACTIVE: str
    class EmergencyAddressStatus:
        REGISTERED: str
        UNREGISTERED: str
        PENDING_REGISTRATION: str
        REGISTRATION_FAILURE: str
        PENDING_UNREGISTRATION: str
        UNREGISTRATION_FAILURE: str
    class VoiceReceiveMode:
        VOICE: str
        FAX: str
    def __init__(self, version, payload, account_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def address_sid(self): ...
    @property
    def address_requirements(self): ...
    @property
    def api_version(self): ...
    @property
    def beta(self): ...
    @property
    def capabilities(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def friendly_name(self): ...
    @property
    def identity_sid(self): ...
    @property
    def phone_number(self): ...
    @property
    def origin(self): ...
    @property
    def sid(self): ...
    @property
    def sms_application_sid(self): ...
    @property
    def sms_fallback_method(self): ...
    @property
    def sms_fallback_url(self): ...
    @property
    def sms_method(self): ...
    @property
    def sms_url(self): ...
    @property
    def status_callback(self): ...
    @property
    def status_callback_method(self): ...
    @property
    def trunk_sid(self): ...
    @property
    def uri(self): ...
    @property
    def voice_receive_mode(self): ...
    @property
    def voice_application_sid(self): ...
    @property
    def voice_caller_id_lookup(self): ...
    @property
    def voice_fallback_method(self): ...
    @property
    def voice_fallback_url(self): ...
    @property
    def voice_method(self): ...
    @property
    def voice_url(self): ...
    @property
    def emergency_status(self): ...
    @property
    def emergency_address_sid(self): ...
    @property
    def emergency_address_status(self): ...
    @property
    def bundle_sid(self): ...
    @property
    def status(self): ...
    def update(self, account_sid=..., api_version=..., friendly_name=..., sms_application_sid=..., sms_fallback_method=..., sms_fallback_url=..., sms_method=..., sms_url=..., status_callback=..., status_callback_method=..., voice_application_sid=..., voice_caller_id_lookup=..., voice_fallback_method=..., voice_fallback_url=..., voice_method=..., voice_url=..., emergency_status=..., emergency_address_sid=..., trunk_sid=..., voice_receive_mode=..., identity_sid=..., address_sid=..., bundle_sid=...): ...
    def fetch(self): ...
    def delete(self): ...
    @property
    def assigned_add_ons(self): ...
