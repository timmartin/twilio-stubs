from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class IpCommandList(ListResource):
    def __init__(self, version) -> None: ...
    def create(self, sim, payload, device_port, payload_type=..., callback_url=..., callback_method=...): ...
    def stream(self, sim=..., sim_iccid=..., status=..., direction=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, sim=..., sim_iccid=..., status=..., direction=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, sim=..., sim_iccid=..., status=..., direction=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class IpCommandPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class IpCommandContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...

class IpCommandInstance(InstanceResource):
    class Status:
        QUEUED: str
        SENT: str
        RECEIVED: str
        FAILED: str
    class Direction:
        TO_SIM: str
        FROM_SIM: str
    class PayloadType:
        TEXT: str
        BINARY: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def sim_sid(self): ...
    @property
    def sim_iccid(self): ...
    @property
    def status(self): ...
    @property
    def direction(self): ...
    @property
    def device_ip(self): ...
    @property
    def device_port(self): ...
    @property
    def payload_type(self): ...
    @property
    def payload(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
