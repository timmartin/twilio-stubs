from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class MessageList(ListResource):
    def __init__(self, version, service_sid, channel_sid) -> None: ...
    def create(self, from_=..., attributes=..., date_created=..., date_updated=..., last_updated_by=..., body=..., media_sid=..., x_twilio_webhook_enabled=...): ...
    def stream(self, order=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, order=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, order=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class MessagePage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class MessageContext(InstanceContext):
    def __init__(self, version, service_sid, channel_sid, sid) -> None: ...
    def fetch(self): ...
    def delete(self, x_twilio_webhook_enabled=...): ...
    def update(self, body=..., attributes=..., date_created=..., date_updated=..., last_updated_by=..., from_=..., x_twilio_webhook_enabled=...): ...

class MessageInstance(InstanceResource):
    class OrderType:
        ASC: str
        DESC: str
    class WebhookEnabledType:
        TRUE: str
        FALSE: str
    def __init__(self, version, payload, service_sid, channel_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def attributes(self): ...
    @property
    def service_sid(self): ...
    @property
    def to(self): ...
    @property
    def channel_sid(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def last_updated_by(self): ...
    @property
    def was_edited(self): ...
    @property
    def from_(self): ...
    @property
    def body(self): ...
    @property
    def index(self): ...
    @property
    def type(self): ...
    @property
    def media(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def delete(self, x_twilio_webhook_enabled=...): ...
    def update(self, body=..., attributes=..., date_created=..., date_updated=..., last_updated_by=..., from_=..., x_twilio_webhook_enabled=...): ...
