from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class ChannelList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, service_sid, sid): ...
    def __call__(self, service_sid, sid): ...

class ChannelPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ChannelContext(InstanceContext):
    def __init__(self, version, service_sid, sid) -> None: ...
    def update(self, type=..., messaging_service_sid=..., x_twilio_webhook_enabled=...): ...

class ChannelInstance(InstanceResource):
    class ChannelType:
        PUBLIC: str
        PRIVATE: str
    class WebhookEnabledType:
        TRUE: str
        FALSE: str
    def __init__(self, version, payload, service_sid: Incomplete | None = ..., sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def service_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def unique_name(self): ...
    @property
    def attributes(self): ...
    @property
    def type(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def created_by(self): ...
    @property
    def members_count(self): ...
    @property
    def messages_count(self): ...
    @property
    def messaging_service_sid(self): ...
    @property
    def url(self): ...
    def update(self, type=..., messaging_service_sid=..., x_twilio_webhook_enabled=...): ...
