from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.chat.v1.service.channel.invite import InviteList as InviteList
from twilio.rest.chat.v1.service.channel.member import MemberList as MemberList
from twilio.rest.chat.v1.service.channel.message import MessageList as MessageList

class ChannelList(ListResource):
    def __init__(self, version, service_sid) -> None: ...
    def create(self, friendly_name=..., unique_name=..., attributes=..., type=...): ...
    def stream(self, type=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, type=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, type=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class ChannelPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ChannelContext(InstanceContext):
    def __init__(self, version, service_sid, sid) -> None: ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, friendly_name=..., unique_name=..., attributes=...): ...
    @property
    def members(self): ...
    @property
    def messages(self): ...
    @property
    def invites(self): ...

class ChannelInstance(InstanceResource):
    class ChannelType:
        PUBLIC: str
        PRIVATE: str
    def __init__(self, version, payload, service_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def service_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def unique_name(self): ...
    @property
    def attributes(self): ...
    @property
    def type(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def created_by(self): ...
    @property
    def members_count(self): ...
    @property
    def messages_count(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, friendly_name=..., unique_name=..., attributes=...): ...
    @property
    def members(self): ...
    @property
    def messages(self): ...
    @property
    def invites(self): ...
