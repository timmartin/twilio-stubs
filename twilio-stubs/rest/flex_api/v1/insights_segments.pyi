from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class InsightsSegmentsList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, segment_id): ...
    def __call__(self, segment_id): ...

class InsightsSegmentsPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class InsightsSegmentsContext(InstanceContext):
    def __init__(self, version, segment_id) -> None: ...
    def fetch(self, token=...): ...

class InsightsSegmentsInstance(InstanceResource):
    def __init__(self, version, payload, segment_id: Incomplete | None = ...) -> None: ...
    @property
    def segment_id(self): ...
    @property
    def external_id(self): ...
    @property
    def queue(self): ...
    @property
    def external_contact(self): ...
    @property
    def external_segment_link_id(self): ...
    @property
    def date(self): ...
    @property
    def account_id(self): ...
    @property
    def external_segment_link(self): ...
    @property
    def agent_id(self): ...
    @property
    def agent_phone(self): ...
    @property
    def agent_name(self): ...
    @property
    def agent_team_name(self): ...
    @property
    def agent_team_name_in_hierarchy(self): ...
    @property
    def agent_link(self): ...
    @property
    def customer_phone(self): ...
    @property
    def customer_name(self): ...
    @property
    def customer_link(self): ...
    @property
    def segment_recording_offset(self): ...
    @property
    def media(self): ...
    @property
    def assessment_type(self): ...
    @property
    def assessment_percentage(self): ...
    @property
    def url(self): ...
    def fetch(self, token=...): ...
