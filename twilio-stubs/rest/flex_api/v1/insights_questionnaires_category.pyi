from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class InsightsQuestionnairesCategoryList(ListResource):
    def __init__(self, version) -> None: ...
    def create(self, name, token=...): ...
    def stream(self, token=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, token=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, token=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, category_id): ...
    def __call__(self, category_id): ...

class InsightsQuestionnairesCategoryPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class InsightsQuestionnairesCategoryContext(InstanceContext):
    def __init__(self, version, category_id) -> None: ...
    def update(self, name, token=...): ...
    def delete(self, token=...): ...

class InsightsQuestionnairesCategoryInstance(InstanceResource):
    def __init__(self, version, payload, category_id: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def category_id(self): ...
    @property
    def name(self): ...
    @property
    def url(self): ...
    def update(self, name, token=...): ...
    def delete(self, token=...): ...
