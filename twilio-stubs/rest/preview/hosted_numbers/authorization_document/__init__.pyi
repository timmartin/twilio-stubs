from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.preview.hosted_numbers.authorization_document.dependent_hosted_number_order import DependentHostedNumberOrderList as DependentHostedNumberOrderList

class AuthorizationDocumentList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, email=..., status=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, email=..., status=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, email=..., status=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, hosted_number_order_sids, address_sid, email, contact_title, contact_phone_number, cc_emails=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class AuthorizationDocumentPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class AuthorizationDocumentContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self, hosted_number_order_sids=..., address_sid=..., email=..., cc_emails=..., status=..., contact_title=..., contact_phone_number=...): ...
    @property
    def dependent_hosted_number_orders(self): ...

class AuthorizationDocumentInstance(InstanceResource):
    class Status:
        OPENED: str
        SIGNING: str
        SIGNED: str
        CANCELED: str
        FAILED: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def address_sid(self): ...
    @property
    def status(self): ...
    @property
    def email(self): ...
    @property
    def cc_emails(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def update(self, hosted_number_order_sids=..., address_sid=..., email=..., cc_emails=..., status=..., contact_title=..., contact_phone_number=...): ...
    @property
    def dependent_hosted_number_orders(self): ...
