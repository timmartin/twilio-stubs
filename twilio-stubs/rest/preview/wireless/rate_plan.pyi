from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class RatePlanList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, unique_name=..., friendly_name=..., data_enabled=..., data_limit=..., data_metering=..., messaging_enabled=..., voice_enabled=..., commands_enabled=..., national_roaming_enabled=..., international_roaming=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class RatePlanPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class RatePlanContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self, unique_name=..., friendly_name=...): ...
    def delete(self): ...

class RatePlanInstance(InstanceResource):
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def unique_name(self): ...
    @property
    def account_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def data_enabled(self): ...
    @property
    def data_metering(self): ...
    @property
    def data_limit(self): ...
    @property
    def messaging_enabled(self): ...
    @property
    def voice_enabled(self): ...
    @property
    def national_roaming_enabled(self): ...
    @property
    def international_roaming(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def update(self, unique_name=..., friendly_name=...): ...
    def delete(self): ...
