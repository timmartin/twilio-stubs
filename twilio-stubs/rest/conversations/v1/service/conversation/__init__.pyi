from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.conversations.v1.service.conversation.message import MessageList as MessageList
from twilio.rest.conversations.v1.service.conversation.participant import ParticipantList as ParticipantList
from twilio.rest.conversations.v1.service.conversation.webhook import WebhookList as WebhookList

class ConversationList(ListResource):
    def __init__(self, version, chat_service_sid) -> None: ...
    def create(self, friendly_name=..., unique_name=..., attributes=..., messaging_service_sid=..., date_created=..., date_updated=..., state=..., timers_inactive=..., timers_closed=..., x_twilio_webhook_enabled=...): ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class ConversationPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ConversationContext(InstanceContext):
    def __init__(self, version, chat_service_sid, sid) -> None: ...
    def update(self, friendly_name=..., date_created=..., date_updated=..., attributes=..., messaging_service_sid=..., state=..., timers_inactive=..., timers_closed=..., unique_name=..., x_twilio_webhook_enabled=...): ...
    def delete(self, x_twilio_webhook_enabled=...): ...
    def fetch(self): ...
    @property
    def participants(self): ...
    @property
    def messages(self): ...
    @property
    def webhooks(self): ...

class ConversationInstance(InstanceResource):
    class WebhookEnabledType:
        TRUE: str
        FALSE: str
    class State:
        INACTIVE: str
        ACTIVE: str
        CLOSED: str
    def __init__(self, version, payload, chat_service_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def chat_service_sid(self): ...
    @property
    def messaging_service_sid(self): ...
    @property
    def sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def unique_name(self): ...
    @property
    def attributes(self): ...
    @property
    def state(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def timers(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    @property
    def bindings(self): ...
    def update(self, friendly_name=..., date_created=..., date_updated=..., attributes=..., messaging_service_sid=..., state=..., timers_inactive=..., timers_closed=..., unique_name=..., x_twilio_webhook_enabled=...): ...
    def delete(self, x_twilio_webhook_enabled=...): ...
    def fetch(self): ...
    @property
    def participants(self): ...
    @property
    def messages(self): ...
    @property
    def webhooks(self): ...
