from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class AddressConfigurationList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, type=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, type=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, type=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, type, address, friendly_name=..., auto_creation_enabled=..., auto_creation_type=..., auto_creation_conversation_service_sid=..., auto_creation_webhook_url=..., auto_creation_webhook_method=..., auto_creation_webhook_filters=..., auto_creation_studio_flow_sid=..., auto_creation_studio_retry_count=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class AddressConfigurationPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class AddressConfigurationContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self, friendly_name=..., auto_creation_enabled=..., auto_creation_type=..., auto_creation_conversation_service_sid=..., auto_creation_webhook_url=..., auto_creation_webhook_method=..., auto_creation_webhook_filters=..., auto_creation_studio_flow_sid=..., auto_creation_studio_retry_count=...): ...
    def delete(self): ...

class AddressConfigurationInstance(InstanceResource):
    class Type:
        SMS: str
        WHATSAPP: str
        MESSENGER: str
        GBM: str
    class AutoCreationType:
        WEBHOOK: str
        STUDIO: str
        DEFAULT: str
    class Method:
        GET: str
        POST: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def type(self): ...
    @property
    def address(self): ...
    @property
    def friendly_name(self): ...
    @property
    def auto_creation(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def update(self, friendly_name=..., auto_creation_enabled=..., auto_creation_type=..., auto_creation_conversation_service_sid=..., auto_creation_webhook_url=..., auto_creation_webhook_method=..., auto_creation_webhook_filters=..., auto_creation_studio_flow_sid=..., auto_creation_studio_retry_count=...): ...
    def delete(self): ...
