from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.proxy.v1.service.session.interaction import InteractionList as InteractionList
from twilio.rest.proxy.v1.service.session.participant import ParticipantList as ParticipantList

class SessionList(ListResource):
    def __init__(self, version, service_sid) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, unique_name=..., date_expiry=..., ttl=..., mode=..., status=..., participants=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class SessionPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class SessionContext(InstanceContext):
    def __init__(self, version, service_sid, sid) -> None: ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, date_expiry=..., ttl=..., status=...): ...
    @property
    def interactions(self): ...
    @property
    def participants(self): ...

class SessionInstance(InstanceResource):
    class Status:
        OPEN: str
        IN_PROGRESS: str
        CLOSED: str
        FAILED: str
        UNKNOWN: str
    class Mode:
        MESSAGE_ONLY: str
        VOICE_ONLY: str
        VOICE_AND_MESSAGE: str
    def __init__(self, version, payload, service_sid, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def service_sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def date_started(self): ...
    @property
    def date_ended(self): ...
    @property
    def date_last_interaction(self): ...
    @property
    def date_expiry(self): ...
    @property
    def unique_name(self): ...
    @property
    def status(self): ...
    @property
    def closed_reason(self): ...
    @property
    def ttl(self): ...
    @property
    def mode(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, date_expiry=..., ttl=..., status=...): ...
    @property
    def interactions(self): ...
    @property
    def participants(self): ...
