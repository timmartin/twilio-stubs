from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.messaging.v1.brand_registration.brand_vetting import BrandVettingList as BrandVettingList

class BrandRegistrationList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, customer_profile_bundle_sid, a2p_profile_bundle_sid, brand_type=..., mock=..., skip_automatic_sec_vet=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class BrandRegistrationPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class BrandRegistrationContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self): ...
    @property
    def brand_vettings(self): ...

class BrandRegistrationInstance(InstanceResource):
    class Status:
        PENDING: str
        APPROVED: str
        FAILED: str
        IN_REVIEW: str
        DELETED: str
    class IdentityStatus:
        SELF_DECLARED: str
        UNVERIFIED: str
        VERIFIED: str
        VETTED_VERIFIED: str
    class BrandFeedback:
        TAX_ID: str
        STOCK_SYMBOL: str
        NONPROFIT: str
        GOVERNMENT_ENTITY: str
        OTHERS: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def customer_profile_bundle_sid(self): ...
    @property
    def a2p_profile_bundle_sid(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def brand_type(self): ...
    @property
    def status(self): ...
    @property
    def tcr_id(self): ...
    @property
    def failure_reason(self): ...
    @property
    def url(self): ...
    @property
    def brand_score(self): ...
    @property
    def brand_feedback(self): ...
    @property
    def identity_status(self): ...
    @property
    def russell_3000(self): ...
    @property
    def government_entity(self): ...
    @property
    def tax_exempt_status(self): ...
    @property
    def skip_automatic_sec_vet(self): ...
    @property
    def mock(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def update(self): ...
    @property
    def brand_vettings(self): ...
