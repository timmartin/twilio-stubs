from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class DomainConfigList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, domain_sid): ...
    def __call__(self, domain_sid): ...

class DomainConfigPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class DomainConfigContext(InstanceContext):
    def __init__(self, version, domain_sid) -> None: ...
    def update(self, messaging_service_sids, fallback_url=..., callback_url=..., messaging_service_sids_action=...): ...
    def fetch(self): ...

class DomainConfigInstance(InstanceResource):
    def __init__(self, version, payload, domain_sid: Incomplete | None = ...) -> None: ...
    @property
    def domain_sid(self): ...
    @property
    def config_sid(self): ...
    @property
    def messaging_service_sids(self): ...
    @property
    def fallback_url(self): ...
    @property
    def callback_url(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    def update(self, messaging_service_sids, fallback_url=..., callback_url=..., messaging_service_sids_action=...): ...
    def fetch(self): ...
