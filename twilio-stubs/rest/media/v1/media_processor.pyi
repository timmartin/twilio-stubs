from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, serialize as serialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class MediaProcessorList(ListResource):
    def __init__(self, version) -> None: ...
    def create(self, extension, extension_context, extension_environment=..., status_callback=..., status_callback_method=..., max_duration=...): ...
    def stream(self, order=..., status=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, order=..., status=..., limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, order=..., status=..., page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class MediaProcessorPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class MediaProcessorContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def update(self, status): ...

class MediaProcessorInstance(InstanceResource):
    class Status:
        FAILED: str
        STARTED: str
        ENDED: str
    class UpdateStatus:
        ENDED: str
    class Order:
        ASC: str
        DESC: str
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def sid(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def extension(self): ...
    @property
    def extension_context(self): ...
    @property
    def status(self): ...
    @property
    def url(self): ...
    @property
    def ended_reason(self): ...
    @property
    def status_callback(self): ...
    @property
    def status_callback_method(self): ...
    @property
    def max_duration(self): ...
    def fetch(self): ...
    def update(self, status): ...
