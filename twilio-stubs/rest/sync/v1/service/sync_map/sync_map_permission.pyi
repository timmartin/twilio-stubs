from _typeshed import Incomplete
from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class SyncMapPermissionList(ListResource):
    def __init__(self, version, service_sid, map_sid) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def get(self, identity): ...
    def __call__(self, identity): ...

class SyncMapPermissionPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class SyncMapPermissionContext(InstanceContext):
    def __init__(self, version, service_sid, map_sid, identity) -> None: ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, read, write, manage): ...

class SyncMapPermissionInstance(InstanceResource):
    def __init__(self, version, payload, service_sid, map_sid, identity: Incomplete | None = ...) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def service_sid(self): ...
    @property
    def map_sid(self): ...
    @property
    def identity(self): ...
    @property
    def read(self): ...
    @property
    def write(self): ...
    @property
    def manage(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, read, write, manage): ...
