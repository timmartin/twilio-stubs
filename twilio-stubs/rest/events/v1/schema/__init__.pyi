from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.events.v1.schema.version import SchemaVersionList as SchemaVersionList

class SchemaList(ListResource):
    def __init__(self, version) -> None: ...
    def get(self, id): ...
    def __call__(self, id): ...

class SchemaPage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class SchemaContext(InstanceContext):
    def __init__(self, version, id) -> None: ...
    def fetch(self): ...
    @property
    def versions(self): ...

class SchemaInstance(InstanceResource):
    def __init__(self, version, payload, id: Incomplete | None = ...) -> None: ...
    @property
    def id(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    @property
    def latest_version_date_created(self): ...
    @property
    def latest_version(self): ...
    def fetch(self): ...
    @property
    def versions(self): ...
