from _typeshed import Incomplete
from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.serverless.v1.service.asset import AssetList as AssetList
from twilio.rest.serverless.v1.service.build import BuildList as BuildList
from twilio.rest.serverless.v1.service.environment import EnvironmentList as EnvironmentList
from twilio.rest.serverless.v1.service.function import FunctionList as FunctionList

class ServiceList(ListResource):
    def __init__(self, version) -> None: ...
    def stream(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def list(self, limit: Incomplete | None = ..., page_size: Incomplete | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...
    def create(self, unique_name, friendly_name, include_credentials=..., ui_editable=...): ...
    def get(self, sid): ...
    def __call__(self, sid): ...

class ServicePage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class ServiceContext(InstanceContext):
    def __init__(self, version, sid) -> None: ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, include_credentials=..., friendly_name=..., ui_editable=...): ...
    @property
    def environments(self): ...
    @property
    def functions(self): ...
    @property
    def assets(self): ...
    @property
    def builds(self): ...

class ServiceInstance(InstanceResource):
    def __init__(self, version, payload, sid: Incomplete | None = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def unique_name(self): ...
    @property
    def include_credentials(self): ...
    @property
    def ui_editable(self): ...
    @property
    def domain_base(self): ...
    @property
    def date_created(self): ...
    @property
    def date_updated(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def delete(self): ...
    def update(self, include_credentials=..., friendly_name=..., ui_editable=...): ...
    @property
    def environments(self): ...
    @property
    def functions(self): ...
    @property
    def assets(self): ...
    @property
    def builds(self): ...
